datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid()) @map("_id")  
  userId             String  
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")  
  sessionToken String   @unique
  userId       String  
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid()) @map("_id")  
  name          String?   @unique
  email         String?   @unique
  hashedPassword String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  
  projectIDs   String[] 
  projects     Project[] @relation(fields: [projectIDs], references: [id])

}

model VerificationToken {
  identifier String @id @map("_id")
  token      String   @unique 
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id            String    @id @default(cuid()) @map("_id")  
  name String
  description String?
  teamLeaderId String 

  deadline DateTime
  createdAt DateTime @default(now())

  memberIDs String[] 
  members User[] @relation(fields: [memberIDs], references: [id])

  tasks Task[]

  badge ProjectBadge?
}

model Task {
  id String @id @default(cuid()) @map("_id")
  category TaskCategories

  projectId String
  project Project @relation(fields: [projectId], references: [id])
}

model ProjectBadge {
  id           String    @id @default(cuid()) @map("_id")  
  color BadgeColors
  icon BadgeIcons

  project Project @relation(fields: [projectId], references: [id])
  projectId String @unique
}

enum TaskCategories {
  todo
  inProgress
  done
}

enum BadgeColors {
  orange
  red
  indigo
  green
  blue
  grey
}

enum BadgeIcons {
  calendar
  tools
  laptop
  people
  heart
  book
}